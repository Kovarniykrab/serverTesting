{
    "swagger": "2.0",
    "info": {
        "description": "API для управления пользователями",
        "title": "TestUser API",
        "contact": {},
        "version": "0.5"
    },
    "basePath": "/",
    "paths": {
        "/api/user/change_password": {
            "put": {
                "description": "хендлер проверяет авторизован ли пользователь и запрашивает подтверждение пароля\nесли все в порядке, пользователю подается форма, для изменения данных.\nзатем пользователь подает форму на сервер, и они записываются вместо старых",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "изменение пользователя",
                "parameters": [
                    {
                        "description": "Обязательные поля : password, confirm_password",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ChangePassForm"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Пароль успешно изменен"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Не авторизован",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/change_user": {
            "put": {
                "description": "хендлер принимает форму, в которой содержатся новые данные и данные оставшиеся без изменений.\nон записывает все данные вместо старых",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "изменение данных пользователя",
                "parameters": [
                    {
                        "description": "Данные пользователя",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ChangeUserForm"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Данные успешно обновлены"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/delete/{id}": {
            "delete": {
                "description": "Пользователя удаляют из системы по ID. Хендлер принимает ID,\nи с его помощью находит пользователя в базе данных и удаляет его из нее",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Удаление пользователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Обязательные поля: id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Пользователь успешно удален"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "запрашиваемая страница не существует",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/login": {
            "post": {
                "description": "Авторизация происходит с помощью email и пароля\nхендлер принимает почту и пароль. По почте ищет пользователя и сверяет 2 хеша. Если они совпадают - пользователь авторизуется\nпри авторизации пользоватcz проверяет временный jwt токен.\nесли авторизация успешна, вызываются хендлеры, которые в свою очередь выдают пользователю данные профиля и историю его диалогов, внутри которых\nпереписка с конкретным пользователем",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Авторизация",
                "parameters": [
                    {
                        "description": "Обязательные поля : email, password",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UserAuthForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешный вход",
                        "schema": {
                            "$ref": "#/definitions/handlers.AuthResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Неверный Email/Password",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/logout": {
            "post": {
                "description": "сессия завершается по сигналу или по истечении токена\nпользователя должно выкинуть на страницу авторизации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "выход",
                "responses": {
                    "204": {
                        "description": "успешный выход"
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/profile/{id}": {
            "get": {
                "description": "хендлер получает ID или name и ищет пользователей по id или name в базе данных и выводит все результаты в форме списка.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "Поиск польхователя",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID пользователя",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пользователь найден",
                        "schema": {
                            "$ref": "#/definitions/handlers.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Пользователь не найден",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/user/register": {
            "post": {
                "description": "во время регистации хендлер принимает данные, которые подает пользователь и проверяет\nесли email не занят,\nто данные записываются на сервер в базу данных, пользователю присваивается id\nи отправляется письмо на почту, с просьбой подтвердить аккаунт и ссылкой, по которой нужно перейти для подтверждения аккаунта\nесли занят email, на указанную почту приходит уведомление о том, что на его почту пытаются зарегестрировать новый аккаунт",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "USER"
                ],
                "summary": "регистрация",
                "parameters": [
                    {
                        "description": "Обязательные поля : email, password, name, confirm_password, date_of_birth",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.RegisterUserForm"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Пользователь успешно зарегестрирован"
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Неверный запрос",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.ChangePassForm": {
            "type": "object",
            "properties": {
                "confirm_pass": {
                    "description": "подтверждение пароля\nПоле обязательно",
                    "type": "string"
                },
                "old_password": {
                    "description": "cтарый пароль\nПоле обязательно",
                    "type": "string"
                },
                "password": {
                    "description": "новый пароль\nПоле обязательно",
                    "type": "string"
                }
            }
        },
        "domain.ChangeUserForm": {
            "type": "object",
            "properties": {
                "date_of_birth": {
                    "description": "дата рождения\nПоле обязательно",
                    "type": "string"
                },
                "name": {
                    "description": "имя пользователя\nПоле обязательно",
                    "type": "string"
                }
            }
        },
        "domain.RegisterUserForm": {
            "type": "object",
            "properties": {
                "confirm_password": {
                    "description": "подтверждение пароля\nПоле обязательно",
                    "type": "string"
                },
                "date_of_birth": {
                    "description": "дата рождения\nПоле обязательно",
                    "type": "string"
                },
                "email": {
                    "description": "Почта\nПоле обязательно",
                    "type": "string"
                },
                "name": {
                    "description": "имя пользователя\nПоле обязательно",
                    "type": "string"
                },
                "password": {
                    "description": "пароль\nПоле обязательно",
                    "type": "string"
                }
            }
        },
        "domain.UserAuthForm": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "логин\nПоле обязательно",
                    "type": "string"
                },
                "password": {
                    "description": "пароль\nПоле обязательно",
                    "type": "string"
                }
            }
        },
        "handlers.AuthResponse": {
            "type": "object",
            "properties": {
                "JWT": {
                    "type": "string"
                }
            }
        },
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handlers.SuccessResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}